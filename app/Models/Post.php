<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletes;
use Laravel\Scout\Searchable;

class Post extends Model
{
    //use Searchable;
    use SoftDeletes;

    /**
     * 追加到模型数组表单的访问器。
     *
     * @var array
     */
    protected $appends = [
        'content_limit'
    ];

    /*
     * 搜索的type
     */
    public function searchableAs()
    {
        return 'post';
    }

    //  定义有哪些字段需要被搜索
    public function toSearchableArray()
    {
        return [
            'title' => $this->title,
            'content' => $this->content,
        ];
    }

    //  关联用户
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    //  评论模型
    public function comments()
    {
        return $this->hasMany(Comment::class)->latest();
    }

    //  赞和用户进行关联
    public function like($userId)
    {
        return $this->hasOne(Like::class)->where('user_id', $userId);
    }

    //  文章的所有赞
    public function likes()
    {
        return $this->hasMany(Like::class);
    }

    // 属于某个作者的文章
    public function scopeAuthorBy(Builder $query, $userId)
    {
        return $query->where('user_id', $userId);
    }

    public function topics()
    {
        return $this->belongsToMany(Topic::class);
    }

    public function getContentLimitAttribute($value)
    {
        $this->attributes['content_limit'] = bcrypt($value);
    }

    // 不属于某个专题的文章
    public function scopeTopicNotBy(Builder $query, $topicId)
    {
        return $query->doesntHave('topics', 'and', function ($q) use ($topicId) {
            $q->where('topic_id', $topicId);
        });
    }

    // 全局scope的方式
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::addGlobalScope('available', function (Builder $builder) {});
    }
}
